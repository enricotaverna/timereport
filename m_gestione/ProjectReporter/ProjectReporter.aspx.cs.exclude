using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;

public partial class m_gestione_ProjectReporter_ProjectReporter : Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

        if (!Auth.ReturnPermission("REPORT", "PROJECT_ALL"))
            Auth.CheckPermission("REPORT", "PROJECT_FORCED");

        if (DDLprogetto.SelectedValue.Length == 0)
            LBProjectReporter.Visible = false;
        else
            LBProjectReporter.Visible = true;

        // Imposta select per selezione progetti legati all'utente
        Set_defaults();
    }

    protected void Set_defaults()
    {
        // imposta selezione progetti in base all'utente
        Load_DDLprogetto();
    }

    protected void Load_DDLprogetto()
    {

        // ripristina valore selezionato se chiamato in postback
        string s ="";
        if (DDLprogetto.SelectedValue != null)
            s = DDLprogetto.SelectedValue;

        DDLprogetto.Items.Clear();
        string sqlcmd = "";

        ListItem noselect = new ListItem("selezionare un progetto","");
        DDLprogetto.Items.Add(noselect);

        // imposta selezione progetti in base all'utente e conta il numero di risorse assegnati ai progetti
        if (Auth.ReferenceEquals("REPORT", "PROJECT_ALL"))
            sqlcmd = "SELECT Projects_Id as PrjId, CAST( ( SELECT COUNT(*) FROM ProjectReporterAttivi WHERE Projects_id = Projects.Projects_Id )  as VarChar(10) )  as PrjLink,  ProjectCode + ' ' + left(Projects.Name,20) AS PrjDesc FROM Projects WHERE active = 'true' ORDER BY ProjectCode";
        else
            sqlcmd = "SELECT Projects.Projects_Id as PrjId, CAST( ( SELECT COUNT(*) FROM ProjectReporterAttivi WHERE Projects_id = Projects.Projects_Id )  as VarChar(10) )  as PrjLink, ProjectCode + ' ' + left(Projects.Name,20) AS PrjDesc FROM Projects " +
                                       " INNER JOIN ForcedAccounts ON Projects.Projects_id = ForcedAccounts.Projects_id " +
                                       " WHERE ( ForcedAccounts.Persons_id=" + Session["persons_id"] + " OR Projects.Always_available = 'true')" +
                                       " AND active = 'true' ORDER BY ( SELECT COUNT(*) FROM ProjectReporterAttivi WHERE Projects_id = Projects.Projects_Id ) DESC , Projects.ProjectCode";

        DataTable dt = Database.GetData(sqlcmd, null);

        foreach (DataRow dr in dt.Rows)
        {
            ListItem listitem = new ListItem(dr["PrjLink"].ToString() + " - " + dr["PrjDesc"].ToString(), dr["PrjId"].ToString());
            if (dr["PrjLink"].ToString() != "0")
                listitem.Attributes["optgroup"] = "Con assegnazioni";
            else
                listitem.Attributes["optgroup"] = "Da Assegnare";

            DDLprogetto.Items.Add(listitem);
        }

        DDLprogetto.SelectedValue = s;

    }

    protected void DDLprogetto_SelectedIndexChanged(object sender, EventArgs e)
    {

        // recupera persone abilitate
        DSProjectReporter.SelectCommand = "SELECT b.name, a.persons_id FROM ForcedAccounts AS a " +
                                  "INNER JOIN Persons AS b ON a.persons_id = b.persons_id " +
                                  "WHERE b.active = 1 AND a.projects_id=" + DDLprogetto.SelectedValue;
        // forza il binding
        Bind_ProjectReporter();
    }

    public void Bind_ProjectReporter()
    {

        DSProjectReporter.SelectCommand = "SELECT b.name, a.persons_id FROM ForcedAccounts AS a " +
                                          "INNER JOIN Persons AS b ON a.persons_id = b.persons_id " +
                                          "WHERE b.active = 1 AND a.projects_id=" + DDLprogetto.SelectedValue;

    }

    // Aggiorna valori in tabella ProjectReporter
    protected void InsertButton_Click(object sender, EventArgs e)
    {

        // cancella precedenti assegnazioni
        Database.OpenConnection();

        Database.ExecuteScalar("DELETE FROM ProjectReporter WHERE Projects_id = " + DDLprogetto.SelectedValue, this);

        // loop sugli elementi selezionati
        foreach (ListItem item in LBProjectReporter.Items)
        {
            if (item.Selected)
            {
                // update
                Database.ExecuteScalar("INSERT INTO ProjectReporter (Projects_id, Persons_id) " +
                                       "VALUES ( '" + DDLprogetto.SelectedValue + "' , '" + item.Value + "')", this);
            }
        }

        Database.CloseConnection();

        // emette messaggio di conferma salvataggio
        string message = "Salvataggio effettuato";
        ClientScript.RegisterStartupScript(this.GetType(), "Popup", "ShowPopup('" + message + "');", true);

    }

    protected void UpdateCancelButton_Click(object sender, EventArgs e)
    {
        Response.Redirect("/timereport/m_gestione/ProjectReporter/ProjectReporter.aspx");
    }

    protected void LBProjectReporter_DataBound(object sender, EventArgs e)
    {
        // loopa sulle persone e imposta il default
        foreach (ListItem item in LBProjectReporter.Items)
        {
            // cerca se esiste il record
            if (Database.RecordEsiste("SELECT * FROM ProjectReporter WHERE Persons_id='" + item.Value + "' AND Projects_id='" + DDLprogetto.SelectedValue + "'"))
                item.Selected = true;
        }
    }

}

